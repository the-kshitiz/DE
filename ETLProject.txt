wget https://de-mysql-connector.s3.amazonaws.com/mysql-connector-java-8.0.25.tar.gz

tar -xvf mysql-connector-java-8.0.25.tar.gz

cd mysql-connector-java-8.0.25/

sudo cp mysql-connector-java-8.0.25.jar /usr/lib/sqoop/lib/

sqoop import \
--connect jdbc:mysql://upgraddetest.cyaielc9bmnf.us-east-1.rds.amazonaws.com:3306/testdatabase \
--table SRC_ATM_TRANS \
--username student \
--password STUDENT123 \
--target-dir /user/root/nord_bank \
-m 1 \
--as-parquetfile

sqoop import \
--connect jdbc:mysql://upgraddetest.cyaielc9bmnf.us-east-1.rds.amazonaws.com:3306/testdatabase \
--table SRC_ATM_TRANS \
--username student \
--password STUDENT123 \
--target-dir /user/root/nord_bank1 \
-m 1 

hadoop fs -ls /user/root/nord_bank

awsuser
Passw0rd
vpc-03f709637b6367255

arn:aws:iam::694541725658:role/UpGrad_Redshift_S3


create schema ETL_PROJECT;

create table ETL_PROJECT.DIM_LOCATION
(
location_id INT,
location VARCHAR(50),
street_name VARCHAR(255),
street_number INT,
zipcode INT,
lat DECIMAL(10,3),
lon DECIMAL(10,3)
);

create table ETL_PROJECT.DIM_DATE
(
date_id INT,
full_date_time TIMESTAMP,
year INT,
month VARCHAR(20),
day INT,
hour INT,
weekday VARCHAR(20)
);

create table ETL_PROJECT.DIM_ATM
(
atm_id INT,
atm_number VARCHAR(20),
atm_manufacturer VARCHAR(50),
atm_location_id INT
);

create table ETL_PROJECT.DIM_CARD_TYPE
(
card_type_id INT,
card_type VARCHAR(30)
);

create table ETL_PROJECT.FACT_TRANS_ATM
(
trans_id BIGINT,
atm_id INT,
weather_loc_id INT,
date_id INT,
card_type_id INT,
atm_status VARCHAR(20),
currency VARCHAR(10),
service VARCHAR(20),
transaction_amount INT,
message_code VARCHAR(255),
message_text VARCHAR(255),
rain_3h DECIMAL(10,3),
clouds_all INT,
weather_id INT,
weather_main VARCHAR(50),
weather_description VARCHAR(255)
);

copy ETL_PROJECT.DIM_ATM from
's3://etlbukcetkshitiz/ETL_UPGRAD/DIM_ATM/part-00000-5fa8dd3f-ba1b-4d0e-bc7b-34634caa308b-c000.csv'
iam_role 'arn:aws:iam::694541725658:role/UpGrad_Redshift_S3'
delimiter ',' region 'us-east-1'
IGNOREHEADER 1;

copy ETL_PROJECT.DIM_CARD_TYPE from
's3://etlbukcetkshitiz/ETL_UPGRAD/DIM_CARD_TYPE/part-00000-0df301a3-bccd-442e-8af4-d982e1c9d370-c000.csv'
iam_role 'arn:aws:iam::694541725658:role/UpGrad_Redshift_S3'
delimiter ',' region 'us-east-1'
IGNOREHEADER 1;

copy ETL_PROJECT.DIM_DATE from
's3://etlbukcetkshitiz/ETL_UPGRAD/DIM_DATE/part-00000-690a4901-3f6e-42c9-8b5b-214cf024983f-c000.csv'
iam_role 'arn:aws:iam::694541725658:role/UpGrad_Redshift_S3'
delimiter ',' region 'us-east-1'
timeformat 'auto'
IGNOREHEADER 1;

copy ETL_PROJECT.DIM_LOCATION from
's3://etlbukcetkshitiz/ETL_UPGRAD/DIM_LOCATION/part-00000-e39e9c3a-26aa-4b57-88ce-d7f68525ce75-c000.csv'
iam_role 'arn:aws:iam::694541725658:role/UpGrad_Redshift_S3'
delimiter ',' region 'us-east-1'
IGNOREHEADER 1;

copy ETL_PROJECT.FACT_TRANS_ATM from
's3://etlbukcetkshitiz/ETL_UPGRAD/FACT_ATM_TRANS/part-00000-d584b4af-d5d1-44aa-b760-3d2204bb2206-c000.csv'
iam_role 'arn:aws:iam::694541725658:role/UpGrad_Redshift_S3'
delimiter ',' region 'us-east-1'
IGNOREHEADER 1;

SELECT DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION, Count(FTA.TRANS_ID) as TRANSACTION_COUNT
FROM 
ETL_PROJECT.FACT_TRANS_ATM FTA 
INNER JOIN 
ETL_PROJECT.DIM_ATM DA 
ON FTA.ATM_ID = DA.ATM_ID
INNER JOIN 
ETL_PROJECT.DIM_LOCATION DL
ON DA.ATM_LOCATION_ID = DL.LOCATION_ID
WHERE FTA.ATM_STATUS = 'Inactive'
GROUP BY DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION 
ORDER BY TRANSACTION_COUNT DESC
LIMIT 10;

Query 1
SELECT DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION, Count(FTA.TRANS_ID) as TOTAL_TRANSACTION_COUNT, COUNT(FTA.ATM_STATUS) AS INACTIVE_COUNT
FROM 
ETL_PROJECT.FACT_TRANS_ATM FTA 
LEFT JOIN 
ETL_PROJECT.DIM_ATM DA 
ON FTA.ATM_ID = DA.ATM_ID
LEFT JOIN 
ETL_PROJECT.DIM_LOCATION DL
ON DA.ATM_LOCATION_ID = DL.LOCATION_ID
WHERE FTA.ATM_STATUS = 'Inactive'
GROUP BY DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION_ID , DL.LOCATION
ORDER BY TOTAL_TRANSACTION_COUNT DESC
LIMIT 10;

Query 2
SELECT FTA.WEATHER_MAIN, Count(FTA.TRANS_ID) as TOTAL_TRANSACTION_COUNT, COUNT(FTA.ATM_STATUS) AS INACTIVE_COUNT
FROM 
ETL_PROJECT.FACT_TRANS_ATM FTA 
LEFT JOIN 
ETL_PROJECT.DIM_ATM DA 
ON FTA.ATM_ID = DA.ATM_ID
WHERE FTA.MESSAGE_CODE IS NOT NULL
GROUP BY FTA.WEATHER_MAIN
ORDER BY TOTAL_TRANSACTION_COUNT DESC
LIMIT 10;


Query 3
SELECT DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION, Count(FTA.TRANS_ID) as TOTAL_TRANSACTION_COUNT
FROM 
ETL_PROJECT.FACT_TRANS_ATM FTA 
INNER JOIN 
ETL_PROJECT.DIM_ATM DA 
ON FTA.ATM_ID = DA.ATM_ID
INNER JOIN 
ETL_PROJECT.DIM_LOCATION DL
ON DA.ATM_LOCATION_ID = DL.LOCATION_ID
GROUP BY DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION_ID , DL.LOCATION
ORDER BY TOTAL_TRANSACTION_COUNT DESC
LIMIT 10;

Query 4
SELECT DE.YEAR, DE.MONTH, COUNT(TRANS_ID) AS TOTAL_TRANSACTION_COUNT, SUM(CASE WHEN ATM_STATUS = 'Inactive' then 1 ELSE 0 END) AS INACTIVE_COUNT, (INACTIVE_COUNT*100/TOTAL_TRANSACTION_COUNT) AS INACTIVE_COUNT_PERCENT
FROM 
ETL_PROJECT.FACT_TRANS_ATM FTA 
INNER JOIN 
ETL_PROJECT.DIM_DATE DE 
ON FTA.DATE_ID = DE.DATE_ID
GROUP BY DE.YEAR, DE.MONTH


Query 5 
SELECT FTA.ATM_ID AS ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION, SUM(FTA.TRANSACTION_AMOUNT) AS TOTAL_TRANSACTION_AMOUNT
FROM 
ETL_PROJECT.FACT_TRANS_ATM FTA 
INNER JOIN 
ETL_PROJECT.DIM_ATM DA 
ON FTA.ATM_ID = DA.ATM_ID
INNER JOIN 
ETL_PROJECT.DIM_LOCATION DL
ON DA.ATM_LOCATION_ID = DL.LOCATION_ID
GROUP BY FTA.ATM_ID,DA.ATM_MANUFACTURER, DA.ATM_LOCATION_ID, DL.LOCATION
ORDER BY TOTAL_TRANSACTION_AMOUNT DESC
LIMIT 10;

Query 6
SELECT DC.CARD_TYPE , COUNT(TRANS_ID) AS TOTAL_TRANSACTION_COUNT, COUNT(ATM_STATUS) AS INACTIVE_COUNT
FROM
ETL_PROJECT.FACT_TRANS_ATM FTA 
LEFT JOIN
ETL_PROJECT.DIM_CARD_TYPE DC
ON
FTA.CARD_TYPE_ID = DC.CARD_TYPE_ID
WHERE MESSAGE_CODE IS NOT NULL
GROUP BY DC.CARD_TYPE;

Query 7
SELECT DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION , 
CASE
    WHEN DE.WEEKDAY IN ('Saturday','Sunday') THEN 1
    ELSE 0
END AS WEEKEND_FLAG,
COUNT(FTA.TRANS_ID) AS TOTAL_TRANSACTION_COUNT
FROM
ETL_PROJECT.FACT_TRANS_ATM FTA 
INNER JOIN 
ETL_PROJECT.DIM_DATE DE 
ON FTA.DATE_ID = DE.DATE_ID
INNER JOIN
ETL_PROJECT.DIM_ATM DA 
ON FTA.ATM_ID = DA.ATM_ID
INNER JOIN 
ETL_PROJECT.DIM_LOCATION DL
ON FTA.WEATHER_LOC_ID = DL.LOCATION_ID
GROUP BY DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION, WEEKEND_FLAG
ORDER BY DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION, WEEKEND_FLAG;

QUERY 8
WITH TEMP_TABLE AS(
SELECT DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION, DE.WEEKDAY, COUNT(FTA.TRANS_ID) AS TOTAL_TRANSACTION_COUNT
FROM 
ETL_PROJECT.FACT_TRANS_ATM FTA 
INNER JOIN
ETL_PROJECT.DIM_ATM DA
ON DA.ATM_ID = FTA.ATM_ID
INNER JOIN 
ETL_PROJECT.DIM_DATE DE
ON DE.DATE_ID = FTA.DATE_ID
INNER JOIN
ETL_PROJECT.DIM_LOCATION DL
ON FTA.WEATHER_LOC_ID = DL.LOCATION_ID
WHERE DL.LOCATION = 'Vejgaard'
GROUP BY DA.ATM_NUMBER, DA.ATM_MANUFACTURER, DL.LOCATION, DE.WEEKDAY
)
SELECT ATM_NUMBER, ATM_MANUFACTURER, LOCATION, MIN(WEEKDAY) AS WEEKDAY, MAX(TOTAL_TRANSACTION_COUNT) AS TOTAL_TRANSACTION_COUNT
FROM TEMP_TABLE
GROUP BY ATM_NUMBER, ATM_MANUFACTURER, LOCATION;


